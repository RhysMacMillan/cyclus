name: Build/Test Cyclus

on:
  # allows us to run workflows manually
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - '.github/workflows/build_test_publish.yml'
      - '.github/workflows/changelog_test.yml'
      - 'docker/**'
      - 'doc/**'
      - 'CHANGELOG.rst'
  push:
    paths-ignore:
      - '.github/workflows/build_test_publish.yml'
      - '.github/workflows/changelog_test.yml'
      - 'docker/**'
      - 'doc/**'
      - 'CHANGELOG.rst'

jobs:
  build-test-cyclus:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        ubuntu_versions : [
          20.04,
          22.04,
        ]
        pkg_mgr : [
          apt,
          conda,
        ]

    steps:
      - name: Checkout Cyclus
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Test Cyclus
        uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: docker/Dockerfile
          build-args: |
            pkg_mgr=${{ matrix.pkg_mgr }}
            ubuntu_version=${{ matrix.ubuntu_versions }}

  downstream-cycamore:
    runs-on: ubuntu-latest
    needs: build-test-cyclus
    if: ${{ github.event_name == 'pull_request' }}
    continue-on-error: true

    strategy:
      fail-fast: false
      matrix:
        ubuntu_versions : [
          20.04,
          22.04,
        ]
        pkg_mgr : [
          apt,
          conda,
        ]

    steps:
      - name: Checkout Cycamore
        uses: actions/checkout@v4
        with:
          repository: cyclus/cycamore
          ref: main
          path: ${{ github.workspace }}/cycamore

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Debugging
        run: |
          pwd
          ls
          ls ${{ github.workspace }}

      - name: Build Cycamore
        id: build-cycamore
        uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ${{ github.workspace }}/cycamore
          file: docker/Dockerfile
          build-args: |
            pkg_mgr=${{ matrix.pkg_mgr }}
            ubuntu_version=${{ matrix.ubuntu_versions }}
      
      - name: Failure Warning
        if: steps.build-cycamore.outcome != 'success'
        run: |
          echo "::warning title=Downstream Failure::Cycamore Build/Test Failed"


  downstream-cymetric:
    runs-on: ubuntu-latest
    needs: [build-test-cyclus, downstream-cycamore]
    if: ${{ github.event_name == 'pull_request' }}
    continue-on-error: true

    strategy:
      fail-fast: false
      matrix:
        ubuntu_versions : [
          20.04,
          22.04,
        ]
        pkg_mgr : [
          apt,
          conda,
        ]

    steps:
      - name: Checkout Cymetric
        uses: actions/checkout@v4
        with:
          repository: cyclus/cymetric
          ref: main
          path: ${{ github.workspace }}/cymetric

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Debugging
        run: |
          pwd
          ls
          ls cymetric


      - name: Build Cymetric
        id: build-cymetric
        uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ${{ github.workspace }}/cymetric
          file: docker/Dockerfile
          build-args: |
            pkg_mgr=${{ matrix.pkg_mgr }}
            ubuntu_version=${{ matrix.ubuntu_versions }}

      - name: Failure Warning
        if: steps.build-cymetric.outcome != 'success'
        run: |
          echo "::warning title=Downstream Failure::Cymetric Build/Test Failed"
