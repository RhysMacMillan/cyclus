name: Build/Test Cyclus

on:
  # allows us to run workflows manually
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - '.github/workflows/build_test_publish.yml'
      - '.github/workflows/changelog_test.yml'
      - 'docker/**'
      - 'doc/**'
      - 'CHANGELOG.rst'
  push:
    paths-ignore:
      - '.github/workflows/build_test_publish.yml'
      - '.github/workflows/changelog_test.yml'
      - 'docker/**'
      - 'doc/**'
      - 'CHANGELOG.rst'

jobs:
  build-test-cyclus:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        ubuntu_versions : [
          20.04,
          22.04,
        ]
        pkg_mgr : [
          apt,
          conda,
        ]

    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Checkout Cyclus
        uses: actions/checkout@v4

      - name: Build and Test Cyclus
        id: build-cyclus
        uses: docker/build-push-action@v5
        with:
          file: docker/Dockerfile
          cache-from: type=registry,ref=ghcr.io/cyclus/cyclus_${{ matrix.ubuntu_versions }}_${{ matrix.pkg_mgr }}/cyclus:ci-layer-cache
          cache-to: type=registry,ref=ghcr.io/cyclus/cyclus_${{ matrix.ubuntu_versions }}_${{ matrix.pkg_mgr }}/cyclus:ci-layer-cache,mode=max
          tags: ghcr.io/cyclus/cyclus_${{ matrix.ubuntu_versions }}_${{ matrix.pkg_mgr }}/cyclus:ci-image-cache
          push: true
          build-args: |
            pkg_mgr=${{ matrix.pkg_mgr }}
            ubuntu_version=${{ matrix.ubuntu_versions }}

      - name: Checkout Cycamore
        if: ${{ github.event_name == 'pull_request' && steps.build-cyclus.outcome == 'success' }}
        uses: actions/checkout@v4
        with:
          repository: bennibbelink/cycamore
          ref: ci-test
          path: $HOME/cycamore

      - name: Build Cycamore
        id: build-cycamore
        if: ${{ github.event_name == 'pull_request' && steps.build-cyclus.outcome == 'success' }}
        continue-on-error: true
        uses: docker/build-push-action@v5
        with:
          context: $HOME/cycamore
          file: $HOME/cycamore/docker/Dockerfile
          cache-from: type=registry,ref=ghcr.io/cyclus/cycamore_${{ matrix.ubuntu_versions }}_${{ matrix.pkg_mgr }}/cycamore:ci-layer-cache
          cache-to: type=registry,ref=ghcr.io/cyclus/cycamore_${{ matrix.ubuntu_versions }}_${{ matrix.pkg_mgr }}/cycamore:ci-layer-cache,mode=max
          tags: ghcr.io/cyclus/cycamore_${{ matrix.ubuntu_versions }}_${{ matrix.pkg_mgr }}/cycamore:ci-image-cache
          push: true
          build-args: |
            pkg_mgr=${{ matrix.pkg_mgr }}
            ubuntu_version=${{ matrix.ubuntu_versions }}
            cyclus_tag=ci-image-cache@${{ steps.build-cyclus.outputs.digest }}

      - name: Checkout Cymetric
        if: ${{ github.event_name == 'pull_request' && steps.build-cycamore.outcome == 'success' }}
        uses: actions/checkout@v4
        with:
          repository: bennibbelink/cymetric
          ref: ci-test
          path: $HOME/cymetric

      - name: Build Cymetric
        if: ${{ github.event_name == 'pull_request' && steps.build-cycamore.outcome == 'success' }}
        id: build-cymetric
        continue-on-error: true
        uses: docker/build-push-action@v5
        with:
          context: $HOME/cymetric
          file: $HOME/cymetric/docker/Dockerfile
          cache-from: type=registry,ref=ghcr.io/cyclus/cymetric_${{ matrix.ubuntu_versions }}_${{ matrix.pkg_mgr }}/cymetric:ci-layer-cache
          cache-to: type=registry,ref=ghcr.io/cyclus/cymetric_${{ matrix.ubuntu_versions }}_${{ matrix.pkg_mgr }}/cymetric:ci-layer-cache,mode=max
          tags: ghcr.io/cyclus/cymetric_${{ matrix.ubuntu_versions }}_${{ matrix.pkg_mgr }}/cymetric:ci-image-cache
          push: true
          build-args: |
            pkg_mgr=${{ matrix.pkg_mgr }}
            ubuntu_version=${{ matrix.ubuntu_versions }}
            cycamore_tag=ci-image-cache@${{ steps.build-cycamore.outputs.digest }}
  
      - name: PR Comment
        if: ${{ github.event_name == 'pull_request' }}
        uses: thollander/actions-comment-pull-request@v2
        with:
          comment_tag: downstream_statuses
          message: |
            ## Downstream Build Statuses using Cyclus ${{ github.ref }}
            - Cycamore: ${{steps.build-cycamore.outcome == 'success' && '*Success* :white_check_mark:' || 
                steps.build-cycamore.outcome == 'failure' && '**Failure** :x:' || 
                '**Skipped due to upstream failure** :warning:'}}
            - Cymetric: ${{needs.build-cymetric.outcome == 'success' && '*Success* :white_check_mark:' || 
                steps.build-cymetric.outcome == 'failure' && '**Failure** :x:' || 
                '**Skipped due to upstream failure** :warning:'}}